name: Build Lumy electron app and release

on:
  push:
    # branches:
    #   - master
    tags:
      - v*
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [14.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          repository: DHARPA-Project/codename-vre
      - name: Set up nodejs
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies using Node.js ${{ matrix.node-version }}
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
        env:
          NO_SOURCE_MAP: ${{ startsWith(matrix.os, 'windows-')}}
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

          package_root: applications/jupyter-app
          build_script_name: "build-all"
